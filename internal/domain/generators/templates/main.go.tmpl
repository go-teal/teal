package main

import (
{{if index .Connections "duckdb" }}
	_ "github.com/marcboeker/go-duckdb"
{{end}}
{{if index .Connections "postgres" }}
	"github.com/jackc/pgx/v5"
{{end}}
	"os"
	"github.com/rs/zerolog"
	"github.com/rs/zerolog/log"
	modeltests "github.com/go-teal/demo/internal/model_tests"
	"github.com/go-teal/teal/pkg/core"
	"github.com/go-teal/teal/pkg/dags"
	"{{ .Config.Module }}/internal/assets"
)

func main() {
	log.Logger = log.Output(zerolog.ConsoleWriter{Out: os.Stderr})
	log.Info().Msg("Starting {{ .Profile.Name }}")
	core.GetInstance().Init("config.yaml", ".")
	defer core.GetInstance().Shutdown()
	config := core.GetInstance().Config
	dag := dags.InitChannelDag(assets.DAG, assets.ProjectAssets, config, "{{ .Profile.Name }}")
	// dag := dags.InitChannelDagWithTests(assets.DAG, assets.ProjectAssets, modeltests.ProjectTests, config, "{{ .Profile.Name }}")
	wg := dag.Run()
	result := <-dag.Push("{{ .Profile.Name }}", nil, make(chan map[string]interface{}))
	log.Info().Any("Result", result).Send()
	dag.Stop()
	wg.Wait()

	modeltests.TestAll()
	log.Info().Msg("Finishing {{ .Profile.Name }}")
}
